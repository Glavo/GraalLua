/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.glavo.lua.launcher;

import org.junit.jupiter.api.*;

import java.nio.file.Paths;
import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class CmdLineParserTest {
    @Test void parseOption1() {
        var result = CmdLineParser.parse(Arrays.asList("-E", "-v"))
                .getLeft();
        assertTrue(result.ignoreEnv);
        assertTrue(result.showVersion);
        assertTrue(result.enterInterative);
        assertFalse(result.fromStdin);
    }

    @Test void parseOption2() {
        var result = CmdLineParser.parse(Arrays.asList("-i", "-"))
                .getLeft();
        assertFalse(result.ignoreEnv);
        assertFalse(result.showVersion);
        assertTrue(result.enterInterative);
        assertTrue(result.fromStdin);
    }

    @Test void parseArguments() {
        var result = CmdLineParser.parse(Arrays.asList("test.lua", "a", "b", "c"))
                .getLeft();
        assertFalse(result.ignoreEnv);
        assertFalse(result.showVersion);
        assertFalse(result.enterInterative);
        assertFalse(result.fromStdin);
        assertEquals(result.scriptPath, Paths.get("test.lua"));
        assertArrayEquals(result.innerArguments, new String[] {
                "a", "b", "c"
        });
    }

    @Test void parseLibs() {
        var result = CmdLineParser.parse(Arrays.asList("-i", "-l", "a", "-l", "b", "-l", "c", "-E", "test.lua"))
                .getLeft();
        assertTrue(result.ignoreEnv);
        assertFalse(result.showVersion);
        assertTrue(result.enterInterative);
        assertEquals(result.scriptPath, Paths.get("test.lua"));
        assertArrayEquals(result.libraries, new String[] {
                "a", "b", "c"
        });
    }

    @Test void parseStm() {
        var result = CmdLineParser.parse(Arrays.asList("-e", "print(1)", "-e", "print(2)", "-e", "print(3)")).getLeft();
        assertArrayEquals(result.statements, new String[] {
                "print(1)", "print(2)", "print(3)"
        });
    }

    @Test void bypass() {
        var result = CmdLineParser.parse(Arrays.asList("-e", "-E", "--jvm", "--help"));
        assertArrayEquals(result.getRight().toArray(), new String[] {
               "--jvm", "--help"
        });
    }


}
